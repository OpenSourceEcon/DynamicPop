rm(list = ls()) # Remove all old data
# setwd('') # Set working directory
# install.packages('data.table') # Install packages
library(data.table)
library(ggplot2) # Visualiz
m(list = ls()) # Remove all old data
# setwd('') # Set working directory
install.packages('data.table') # Install packages
library(data.table)
library(ggplot2)
(list = ls()) # Remove all old data
# setwd('') # Set working directory
# install.packages('data.table') # Install packages
library(data.table)
library(ggplot2) # Visualization tool
sta
install.packages('ggplot2')
st = ls()) # Remove all old data
# setwd('') # Set working directory
# install.packages('data.table') # Install packages
# install.packages('ggplot2')
library(data.table)
library(ggplot2) # Visualization tool
a('mtcars') # Pre-loaded dataset
mtcars <- as.data.table(mtcars)++
?mtcars # Show what mtcars is
data('mtcars') # Pre-loaded dataset
mtcars <- as.data.table(mtcars)++
?mtcars # Show what mtcars is
rm(list = ls()) # Remove all old data
# setwd('') # Set working directory
# install.packages('data.table') # Install packages
# install.packages('ggplot2')
library(data.table)
library(ggplot2) # Visualization tool
data('mtcars') # Pre-loaded dataset
mtcars <- as.data.table(mtcars)++
?mtcars # Show what mtcars is
?mtcars # Show what mtcars is
summary(mtcars) # Get summary statistics
str(mtcars) # Get structure of dataset
plot(mtcars$disp, mtcars$mpg)
cor(mtcars$disp, mtcars$mpg)
ggplot(aes(x = disp, y = mpg), data = mtcars) +
geom_point(colour = 'red') + # Scatter plot points
geomsmooth(method = 'lm', fill = NA) # Line
ggplot(aes(x = disp, y = mpg), data = mtcars) +
geom_point(colour = 'red') + # Scatter plot points
geom_smooth(method = 'lm', fill = NA) # Line
car_lm <- lm(mpg~disp, data = mtcars)
summary(car_lm) # Get p-value
p = list(rho=0.9,a = 3, gamma =1.5)
p$n = 1000
data = data.table(B = 0, W = exp(rnorm(p$n) -3))
# solve for lambda
data[, Lb := ((p$rho*W - B)/(p$a))^(1/(1+p$gamma))]
data[, Lb := pmin(pmax(Lb,0),1)]
data[, D  := rexp(p$n, rate = Lb)]
install.packages("data.table", type="source", dependencies=TRUE)
p = list(rho=0.9,a = 3, gamma =1.5)
p$n = 1000
data = data.table(B = 0, W = exp(rnorm(p$n) -3))
# solve for lambda
data[, Lb := ((p$rho*W - B)/(p$a))^(1/(1+p$gamma))]
data[, Lb := pmin(pmax(Lb,0),1)]
data[, D  := rexp(p$n, rate = Lb)]
p = list(rho=0.9,a = 3, gamma =1.5)
p$n = 1000
data = data.table(B = 0, W = exp(rnorm(p$n) -3))
# solve for lambda
data[, Lb := ((p$rho*W - B)/(p$a))^(1/(1+p$gamma))]
data[, Lb := pmin(pmax(Lb,0),1)]
data[, D  := rexp(p$n, rate = Lb)]
ggplot(data,aes(x=W,y=Lb)) + geom_line() + theme_bw()
install.packages()
data[, Lb := ((p$rho*W - B)/(p$a))^(1/(1+p$gamma))]
p = list(rho=0.9,a = 3, gamma =1.5)
p$n = 1000
data = data.table(B = 0, W = exp(rnorm(p$n) -3))
# solve for lambda
data[, Lb := ((p$rho*W - B)/(p$a))^(1/(1+p$gamma))]
data[, Lb := pmin(pmax(Lb,0),1)]
data[, D  := rexp(p$n, rate = Lb)]
ggplot(data,aes(x=W,y=Lb)) + geom_line() + theme_bw()
install.packages("ggplot2")
install.packages('reticulate')
install.packages(c("backports", "glue", "lubridate", "MASS", "Matrix", "mgcv", "tibble"))
library(reticulate)
setwd("/Users/adamalexanderoppenheimer/Desktop/DynamicPop/data/demographic/clean")
pd <- import("pandas")
n
use_python("/usr/local/bin/python")
pd <- import("pandas")
fert_data <- pd$read_pickle("fert.p")
mort_data <- pd$read_pickle("mort.p")
fert_data
fert_data.shape
fert_data.len()
fert_data.length()
length(fert_data)
shape(fert_data)
pop_data, fert_data <- pd$read_pickle("fert.p")
fert_data[0]
fert_data[1]
fert_data[2]
pd <- import("pandas")
fert_full <- pd$read_pickle("fert.p")
pop_data <- fert_full[1]
fert_data <- fert_full[2]
mort_full <- pd$read_pickle("mort.p")
non_inf_mort <- mort_full[3]
inf_mort <- mort_full[4]
imm_data <- pd$read_pickle("imm.p")
length(fert_full)
length(pop_data)
shape(pop_data)
pop_data.shape
ncol(pop_data)
pop_data
dim(fert_data)
type(fert_data)
typeof(fert_data)
length(fert_data)
fert_data <- fert_full[2][1]
fert_data
dim(fert_data)
length(fert_data)
typeof(fert_data)
fert_data[1]
fert_data[1][1]
fert_data[1][1][1][1][1]
fert_data[1964]
fert_data[1][1][1][1][1][1][1][1][1][1][1][1]
fert_data[1][1][1][1][1][1][1][1][1][1][1][1][1][1][1][1][1][1]
pop_data
pop_data[1]
pop_data[[1]]
pop_data[[[[[[[1]]]]]]]
pop_data[[[1]]]
pop_data[[1]]
typeof(pop_data[[1]])
length(pop_data[[1]])
pop_data[[1]]
pop_data <- fert_full[[1]
]
pop_data
fert_data <- fert_full[[2]]
fert_data
typeof(fert_data)
length(fert_data)
length(pop_data)
mort_full <- pd$read_pickle("mort.p")
non_inf_mort <- mort_full[[3]]
inf_mort <- mort_full[[4]]
length(non_inf_mort)
length(inf_mort)
dim(non_inf_mort)
dim(inf_mort)
mort_data = prepend(inf_mort, non_inf_mort, 1)
pd <- import("pandas")
fert_full <- pd$read_pickle("fert.p")
pop_data <- fert_full[[1]]
fert_data <- fert_full[[2]]
mort_full <- pd$read_pickle("mort.p")
mort_data <- mort_full[[3]]
inf_mort <- mort_full[[4]]
prepend(non_inf_mort, inf_mort, 1)
install.packages("prepend")
library(prepend)
library(rlang)
prepend(non_inf_mort, inf_mort, 1)
dim(non_inf_mort)
pd <- import("pandas")
fert_full <- pd$read_pickle("fert.p")
pop_data <- fert_full[[1]]
fert_data <- fert_full[[2]]
mort_full <- pd$read_pickle("mort.p")
non_inf_mort <- mort_full[[3]]
inf_mort <- mort_full[[4]]
mort_data = prepend(non_inf_mort, inf_mort, 1)
dim(mort_data)
mort_data
non_inf_mort
dim(non_inf_mort)
pd <- import("pandas")
fert_full <- pd$read_pickle("fert.p")
pop_data <- fert_full[[1]]
fert_data <- fert_full[[2]]
mort_full <- pd$read_pickle("mort.p")
non_inf_mort <- mort_full[[3]]
inf_mort <- mort_full[[4]]
mort_data = append(inf_mort, non_inf_mort, rows=TRUE)
imm_data <- pd$read_pickle("imm.p")
dim(imm_data)
dim(imm_data)[1]
dim(non_inf_mort)
dim(non_inf_mort)[1]
for(i in 1:10)
print(i)
pd <- import("pandas")
fert_full <- pd$read_pickle("fert.p")
pop_data <- fert_full[[1]]
fert_data <- fert_full[[2]]
mort_full <- pd$read_pickle("mort.p")
non_inf_mort <- mort_full[[3]]
inf_mort <- mort_full[[4]]
for (i in 1:dim(non_inf_mort)[1]) {
inf_mort = append(inf_mort, non_inf_mort[i], rows=TRUE)
}
mort_data = inf_mort
for (i in 1:dim(non_inf_mort)[1]) {
inf_mort = append(inf_mort, non_inf_mort[i], rows = TRUE)
}
for (i in 1:dim(non_inf_mort)[1]) {
inf_mort = append(inf_mort, non_inf_mort[i], rows = TRUE, ...)
}
dim(inf_mort)
inf_mort
typeof(inf_mort)
inf_mort
for (i in 1:dim(non_inf_mort)[1]) {
inf_mort = append(inf_mort, non_inf_mort[i])
}
non_inf_mort[1]
for (i in 1:dim(non_inf_mort)[1]) {
print(non_inf_mort[i])
inf_mort = append(inf_mort, non_inf_mort[i])
}
non_inf_mort[99]
non_inf_mort[0]
non_inf_mort
dim(non_inf_mort)
non_inf_mort[1]
non_inf_mort[98]
non_inf_mort[,98]
non_inf_mort[][98]
dim(inf_mort)
inf_mort
inf_mort <- mort_full[[4]]
inf_mort
dim(inf_mort)
dim(inf_mort)[1]
inf_mort[1]
for (i in 1:dim(inf_mort)) {
non_inf_mort[i] = prepend(non_inf_mort[i], inf_mort[i])
}
warnings()
prepend(non_inf_mort[i], inf_mort[i])
i
a = prepend(non_inf_mort[i], inf_mort[i])
dim(a)
length(a)
a
a[2]
dim(a[2])
length(a[2])
length(a[[2]])
non_inf_mort[i]
non_inf_mort <- mort_full[[3]]
non_inf_mort[i]
inf_mort[i]
a = prepend(non_inf_mort[i], inf_mort[i])
a
a[2]
dim(a[[2]])
dim(a[2])
a[2]
dim(a[2])
length(a[2])
length(a[[2]])
datatype(non_inf_mort)
typeof(non_inf_mort)
a = prepend(unlist(non_inf_mort[i]), unlist(inf_mort[i]))
a
dim(a)
length(a)
pd <- import("pandas")
fert_full <- pd$read_pickle("fert.p")
pop_data <- fert_full[[1]]
fert_data <- fert_full[[2]]
mort_full <- pd$read_pickle("mort.p")
non_inf_mort <- mort_full[[3]]
inf_mort <- mort_full[[4]]
for (i in 1:dim(inf_mort)) {
non_inf_mort[i] = prepend(unlist(non_inf_mort[i]), unlist(inf_mort[i]))
}
dim(non_inf_mort)
pd <- import("pandas")
fert_full <- pd$read_pickle("fert.p")
pop_data <- fert_full[[1]]
fert_data <- fert_full[[2]]
mort_full <- pd$read_pickle("mort.p")
non_inf_mort <- mort_full[[3]]
inf_mort <- mort_full[[4]]
mort_data = matrix(rbinom(100 * 70, 1, 0.5), ncol = 70, nrow = 100)
for (i in 1:dim(inf_mort)) {
mort_data[i] = prepend(unlist(non_inf_mort[i]), unlist(inf_mort[i]))
}
mort_data
warnings()
mort_data
mort_data[1]
mort_data[1,:]
mort_data[1][]
mort_data[[1]]
dim(mort_data)
mort_data[1,]
pd <- import("pandas")
fert_full <- pd$read_pickle("fert.p")
pop_data <- fert_full[[1]]
fert_data <- fert_full[[2]]
mort_full <- pd$read_pickle("mort.p")
non_inf_mort <- mort_full[[3]]
inf_mort <- mort_full[[4]]
mort_data = matrix(rbinom(100 * 70, 1, 0.5), ncol = 70, nrow = 100)
for (i in 1:dim(inf_mort)) {
mort_data[i,] = prepend(unlist(non_inf_mort[i]), unlist(inf_mort[i]))
}
pd <- import("pandas")
fert_full <- pd$read_pickle("fert.p")
pop_data <- fert_full[[1]]
fert_data <- fert_full[[2]]
mort_full <- pd$read_pickle("mort.p")
non_inf_mort <- mort_full[[3]]
inf_mort <- mort_full[[4]]
mort_data = matrix(rbinom(100 * 70, 1, 0.5), ncol = 70, nrow = 100)
for (i in 1:dim(inf_mort)) {
print(i)
mort_data[i,] = prepend(unlist(non_inf_mort[i]), unlist(inf_mort[i]))
}
pd <- import("pandas")
fert_full <- pd$read_pickle("fert.p")
pop_data <- fert_full[[1]]
fert_data <- fert_full[[2]]
mort_full <- pd$read_pickle("mort.p")
non_inf_mort <- mort_full[[3]]
inf_mort <- mort_full[[4]]
mort_data = matrix(rbinom(100 * 70, 1, 0.5), ncol = 70, nrow = 100)
for (i in 1:dim(inf_mort)) {
print(i)
print(length(prepend(unlist(non_inf_mort[i]), unlist(inf_mort[i]))))
print(length(mort_data[i,]))
mort_data[i,] = prepend(unlist(non_inf_mort[i]), unlist(inf_mort[i]))
}
pd <- import("pandas")
fert_full <- pd$read_pickle("fert.p")
pop_data <- fert_full[[1]]
fert_data <- fert_full[[2]]
mort_full <- pd$read_pickle("mort.p")
non_inf_mort <- mort_full[[3]]
inf_mort <- mort_full[[4]]
mort_data = matrix(rbinom(100 * 70, 1, 0.5), ncol = 70, nrow = 100)
for (i in 1:dim(inf_mort)) {
mort_data[,i] = prepend(unlist(non_inf_mort[i]), unlist(inf_mort[i]))
}
mort_data
dim(mort_dat)
dim(mort_data)
colnames(non_inf_mort)
colnames(mort_data)
mort_data = as.data.frame(t(mort_data))
colnames(mort_data)
colnames(mort_data) <- colnames(non_inf_mort)
colnames(mort_data)
mort_data = matrix(rbinom(100 * 70, 1, 0.5), ncol = 70, nrow = 100)
for (i in 1:dim(inf_mort)) {
mort_data[,i] = prepend(unlist(non_inf_mort[i]), unlist(inf_mort[i]))
}
mort_data = as.data.frame(mort_data)
mort_data = as.data.frame(mort_data)
colnames(mort_data) <- colnames(non_inf_mort)
colnames(mort_data)
dim(mort_data)
pd <- import("pandas")
fert_full <- pd$read_pickle("fert.p")
pop_data <- fert_full[[1]]
fert_data <- fert_full[[2]]
mort_full <- pd$read_pickle("mort.p")
non_inf_mort <- mort_full[[3]]
inf_mort <- mort_full[[4]]
mort_data = matrix(rbinom(100 * 70, 1, 0.5), ncol = 70, nrow = 100)
for (i in 1:dim(inf_mort)) {
mort_data[,i] = prepend(unlist(non_inf_mort[i]), unlist(inf_mort[i]))
}
mort_data = as.data.frame(mort_data)
colnames(mort_data) <- colnames(non_inf_mort)
imm_data <- pd$read_pickle("imm.p")
dim(imm_data)
install.packages("devtools")
library(devtools)
install.packages("usethis")
library(devtools)
library(usethis)
install.packages("fs")
library(devtools)
library(fs)
install.packages("fs")
install.packages("fs", type = "source")
install.packages('fs',repos='http://cran.us.r-project.org')
library(devtools)
testthat
install.packages("Rcpp")
install.packages("Rcpp")
install.packages("Rtools")
